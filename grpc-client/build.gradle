buildscript {
	repositories {
        mavenCentral()
    }
	
	dependencies {		
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE")
		classpath("se.transmode.gradle:gradle-docker:1.2")		
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'docker'


group = 'com.grpc'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	compile fileTree(dir:'lib',include:['*.jar'])
	//compile files('/system/workspace/grpc-test/grpc-server/build/libs/grpc-server-1.0.0')
	
	compile ("io.grpc:grpc-netty:1.16.1")
	
	implementation "io.grpc:grpc-netty-shaded:1.16.1"
	implementation "io.grpc:grpc-protobuf:1.16.1"
	implementation "io.grpc:grpc-stub:1.16.1"
	implementation "io.grpc:grpc-services:1.16.1"	
	
	implementation "org.springframework.boot:spring-boot-starter-data-couchbase"
	
	compile group: 'org.json', name: 'json', version: '20090211'
	
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
}

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	project.group = 'grpctest'
	project.archivesBaseName = 'grpc-client'
	applicationName = 'grpc-client'
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

test {
	useJUnitPlatform()
}
